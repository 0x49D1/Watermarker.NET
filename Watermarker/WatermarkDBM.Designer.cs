//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Watermarker
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WatermarkerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WatermarkerEntities object using the connection string found in the 'WatermarkerEntities' section of the application configuration file.
        /// </summary>
        public WatermarkerEntities() : base("name=WatermarkerEntities", "WatermarkerEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WatermarkerEntities object.
        /// </summary>
        public WatermarkerEntities(string connectionString) : base(connectionString, "WatermarkerEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WatermarkerEntities object.
        /// </summary>
        public WatermarkerEntities(EntityConnection connection) : base(connection, "WatermarkerEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Watermark> Watermarks
        {
            get
            {
                if ((_Watermarks == null))
                {
                    _Watermarks = base.CreateObjectSet<Watermark>("Watermarks");
                }
                return _Watermarks;
            }
        }
        private ObjectSet<Watermark> _Watermarks;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Watermarks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWatermarks(Watermark watermark)
        {
            base.AddObject("Watermarks", watermark);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WatermarkerModel", Name="Watermark")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Watermark : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Watermark object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="originalDir">Initial value of the OriginalDir property.</param>
        /// <param name="watermarkDir">Initial value of the WatermarkDir property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static Watermark CreateWatermark(global::System.Guid gUID, global::System.DateTime createdDate, global::System.String originalDir, global::System.String watermarkDir, global::System.DateTime modifiedDate)
        {
            Watermark watermark = new Watermark();
            watermark.GUID = gUID;
            watermark.CreatedDate = createdDate;
            watermark.OriginalDir = originalDir;
            watermark.WatermarkDir = watermarkDir;
            watermark.ModifiedDate = modifiedDate;
            return watermark;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                if (_GUID != value)
                {
                    OnGUIDChanging(value);
                    ReportPropertyChanging("GUID");
                    _GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GUID");
                    OnGUIDChanged();
                }
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalDir
        {
            get
            {
                return _OriginalDir;
            }
            set
            {
                OnOriginalDirChanging(value);
                ReportPropertyChanging("OriginalDir");
                _OriginalDir = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OriginalDir");
                OnOriginalDirChanged();
            }
        }
        private global::System.String _OriginalDir;
        partial void OnOriginalDirChanging(global::System.String value);
        partial void OnOriginalDirChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WatermarkDir
        {
            get
            {
                return _WatermarkDir;
            }
            set
            {
                OnWatermarkDirChanging(value);
                ReportPropertyChanging("WatermarkDir");
                _WatermarkDir = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WatermarkDir");
                OnWatermarkDirChanged();
            }
        }
        private global::System.String _WatermarkDir;
        partial void OnWatermarkDirChanging(global::System.String value);
        partial void OnWatermarkDirChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalHash
        {
            get
            {
                return _OriginalHash;
            }
            set
            {
                OnOriginalHashChanging(value);
                ReportPropertyChanging("OriginalHash");
                _OriginalHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OriginalHash");
                OnOriginalHashChanged();
            }
        }
        private global::System.String _OriginalHash;
        partial void OnOriginalHashChanging(global::System.String value);
        partial void OnOriginalHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }

    #endregion

    
}
